// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RecipesList /> should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  "node": <div
    className="body grey lighten-5"
  >
    <withRouter(Connect(UserMenu))
      fetchAllRecipes={
        [MockFunction] {
          "calls": Array [
            Array [
              0,
            ],
          ],
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      location={
        Object {
          "search": "?page=1",
        }
      }
      recipeReducer={
        Object {
          "isFetched": false,
          "pagination": Object {},
          "recipes": Array [],
        }
      }
    />
    <div
      className="main"
    >
      <div
        className="container"
      >
        <div
          className="row"
        >
          <h4
            className="center"
          >
            Recipes
          </h4>
          <hr />
        </div>
        <div
          className="row left align-recipe"
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <Preloader />
        </div>
      </div>
    </div>
    <div
      className="row s12 m6 l3"
    >
      
    </div>
    <Footer />
  </div>,
  "nodes": Array [
    <div
      className="body grey lighten-5"
    >
      <withRouter(Connect(UserMenu))
        fetchAllRecipes={
          [MockFunction] {
            "calls": Array [
              Array [
                0,
              ],
            ],
          }
        }
        history={
          Object {
            "push": [MockFunction],
          }
        }
        location={
          Object {
            "search": "?page=1",
          }
        }
        recipeReducer={
          Object {
            "isFetched": false,
            "pagination": Object {},
            "recipes": Array [],
          }
        }
      />
      <div
        className="main"
      >
        <div
          className="container"
        >
          <div
            className="row"
          >
            <h4
              className="center"
            >
              Recipes
            </h4>
            <hr />
          </div>
          <div
            className="row left align-recipe"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <Preloader />
          </div>
        </div>
      </div>
      <div
        className="row s12 m6 l3"
      >
        
      </div>
      <Footer />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <RecipesList
        fetchAllRecipes={
          [MockFunction] {
            "calls": Array [
              Array [
                0,
              ],
            ],
          }
        }
        history={
          Object {
            "push": [MockFunction],
          }
        }
        location={
          Object {
            "search": "?page=1",
          }
        }
        recipeReducer={
          Object {
            "isFetched": false,
            "pagination": Object {},
            "recipes": Array [],
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": RecipesList {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "onChange": [Function],
        "props": Object {
          "fetchAllRecipes": [MockFunction] {
            "calls": Array [
              Array [
                0,
              ],
            ],
          },
          "history": Object {
            "push": [MockFunction],
          },
          "location": Object {
            "search": "?page=1",
          },
          "recipeReducer": Object {
            "isFetched": false,
            "pagination": Object {},
            "recipes": Array [],
          },
        },
        "refs": Object {},
        "state": Object {
          "isLoading": true,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="body grey lighten-5"
        >
          <withRouter(Connect(UserMenu))
            fetchAllRecipes={
              [MockFunction] {
                "calls": Array [
                  Array [
                    0,
                  ],
                ],
              }
            }
            history={
              Object {
                "push": [MockFunction],
              }
            }
            location={
              Object {
                "search": "?page=1",
              }
            }
            recipeReducer={
              Object {
                "isFetched": false,
                "pagination": Object {},
                "recipes": Array [],
              }
            }
          />
          <div
            className="main"
          >
            <div
              className="container"
            >
              <div
                className="row"
              >
                <h4
                  className="center"
                >
                  Recipes
                </h4>
                <hr />
              </div>
              <div
                className="row left align-recipe"
                style={
                  Object {
                    "width": "100%",
                  }
                }
              >
                <Preloader />
              </div>
            </div>
          </div>
          <div
            className="row s12 m6 l3"
          >
            
          </div>
          <Footer />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="body grey lighten-5"
        >
          <withRouter(Connect(UserMenu))
            fetchAllRecipes={
              [MockFunction] {
                "calls": Array [
                  Array [
                    0,
                  ],
                ],
              }
            }
            history={
              Object {
                "push": [MockFunction],
              }
            }
            location={
              Object {
                "search": "?page=1",
              }
            }
            recipeReducer={
              Object {
                "isFetched": false,
                "pagination": Object {},
                "recipes": Array [],
              }
            }
          />
          <div
            className="main"
          >
            <div
              className="container"
            >
              <div
                className="row"
              >
                <h4
                  className="center"
                >
                  Recipes
                </h4>
                <hr />
              </div>
              <div
                className="row left align-recipe"
                style={
                  Object {
                    "width": "100%",
                  }
                }
              >
                <Preloader />
              </div>
            </div>
          </div>
          <div
            className="row s12 m6 l3"
          >
            
          </div>
          <Footer />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <RecipesList
    fetchAllRecipes={
      [MockFunction] {
        "calls": Array [
          Array [
            0,
          ],
        ],
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    location={
      Object {
        "search": "?page=1",
      }
    }
    recipeReducer={
      Object {
        "isFetched": false,
        "pagination": Object {},
        "recipes": Array [],
      }
    }
  />,
}
`;
