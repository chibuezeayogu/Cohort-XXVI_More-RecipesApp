// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Comments /> should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  "node": <li
    className="collection-item avatar z-depth-1"
  >
    <img
      alt="profile"
      className="circle responsive-img"
      src=""
    />
    <span
      className="text-title bold"
    >
      
    </span>
    <p
      style={
        Object {
          "wordWrap": "break-word",
        }
      }
    >
      
    </p>
    <div
      className="secondary-content"
    >
      Invalid date
    </div>
  </li>,
  "nodes": Array [
    <li
      className="collection-item avatar z-depth-1"
    >
      <img
        alt="profile"
        className="circle responsive-img"
        src=""
      />
      <span
        className="text-title bold"
      >
        
      </span>
      <p
        style={
          Object {
            "wordWrap": "break-word",
          }
        }
      >
        
      </p>
      <div
        className="secondary-content"
      >
        Invalid date
      </div>
    </li>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Comments
        review={
          Object {
            "User": Object {
              "firstName": "",
              "imageUrl": "",
            },
            "comment": "",
            "createdAt": "",
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "review": Object {
            "User": Object {
              "firstName": "",
              "imageUrl": "",
            },
            "comment": "",
            "createdAt": "",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <li
          className="collection-item avatar z-depth-1"
        >
          <img
            alt="profile"
            className="circle responsive-img"
            src=""
          />
          <span
            className="text-title bold"
          >
            
          </span>
          <p
            style={
              Object {
                "wordWrap": "break-word",
              }
            }
          >
            
          </p>
          <div
            className="secondary-content"
          >
            Invalid date
          </div>
        </li>,
        "_debugID": 2,
        "_renderedOutput": <li
          className="collection-item avatar z-depth-1"
        >
          <img
            alt="profile"
            className="circle responsive-img"
            src=""
          />
          <span
            className="text-title bold"
          >
            
          </span>
          <p
            style={
              Object {
                "wordWrap": "break-word",
              }
            }
          >
            
          </p>
          <div
            className="secondary-content"
          >
            Invalid date
          </div>
        </li>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Comments
    review={
      Object {
        "User": Object {
          "firstName": "",
          "imageUrl": "",
        },
        "comment": "",
        "createdAt": "",
      }
    }
  />,
}
`;
