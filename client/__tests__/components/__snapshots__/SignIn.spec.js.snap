// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SignIn /> SignIn Component should render without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  "node": <div
    className="body"
  >
    <withRouter(Menu) />
    <div
      className="main"
    >
      <div
        className="login-form z-depth-4"
      >
        <h4
          className="center"
        >
          Welcome Back
        </h4>
        <hr />
        <form
          className="col l6 m8 s12 offset-l3 offset-m2"
          onSubmit={[Function]}
        >
          <div
            className="row"
          >
            <div
              className="input-field col s12"
            >
              <i
                aria-hidden="true"
                className="fa fa-envelope prefix"
              />
              <input
                id="email"
                name="email"
                onChange={[Function]}
                type="text"
                value=""
              />
              <label
                className="active"
                htmlFor="email"
              >
                Email
              </label>
            </div>
            <span
              className="red-text right error-font"
            />
          </div>
          <div
            className="row"
          >
            <div
              className="input-field col s12"
            >
              <i
                aria-hidden="true"
                className="fa fa-key prefix"
              />
              <input
                autoComplete="off"
                id="password"
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />
              <label
                className="active"
                htmlFor="password"
              >
                Password
              </label>
            </div>
            <span
              className="red-text right error-font"
            />
          </div>
          <div
            className="row"
          >
            <button
              className="btn right green form-margin"
              name="action"
              type="submit"
            >
              Login
            </button>
          </div>
        </form>
      </div>
    </div>
    <Footer />
  </div>,
  "nodes": Array [
    <div
      className="body"
    >
      <withRouter(Menu) />
      <div
        className="main"
      >
        <div
          className="login-form z-depth-4"
        >
          <h4
            className="center"
          >
            Welcome Back
          </h4>
          <hr />
          <form
            className="col l6 m8 s12 offset-l3 offset-m2"
            onSubmit={[Function]}
          >
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <i
                  aria-hidden="true"
                  className="fa fa-envelope prefix"
                />
                <input
                  id="email"
                  name="email"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <label
                  className="active"
                  htmlFor="email"
                >
                  Email
                </label>
              </div>
              <span
                className="red-text right error-font"
              />
            </div>
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <i
                  aria-hidden="true"
                  className="fa fa-key prefix"
                />
                <input
                  autoComplete="off"
                  id="password"
                  name="password"
                  onChange={[Function]}
                  type="password"
                  value=""
                />
                <label
                  className="active"
                  htmlFor="password"
                >
                  Password
                </label>
              </div>
              <span
                className="red-text right error-font"
              />
            </div>
            <div
              className="row"
            >
              <button
                className="btn right green form-margin"
                name="action"
                type="submit"
              >
                Login
              </button>
            </div>
          </form>
        </div>
      </div>
      <Footer />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <SignIn
        history={
          Object {
            "push": [MockFunction],
          }
        }
        login={[MockFunction]}
        userData={
          Object {
            "currentUser": Object {
              "email": "chibuezeayogu@hotmail.com",
              "id": 1,
            },
            "isAuthenticated": false,
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": SignIn {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleChange": [Function],
        "props": Object {
          "history": Object {
            "push": [MockFunction],
          },
          "login": [MockFunction],
          "userData": Object {
            "currentUser": Object {
              "email": "chibuezeayogu@hotmail.com",
              "id": 1,
            },
            "isAuthenticated": false,
          },
        },
        "refs": Object {},
        "state": Object {
          "email": "",
          "errors": Object {},
          "password": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="body"
        >
          <withRouter(Menu) />
          <div
            className="main"
          >
            <div
              className="login-form z-depth-4"
            >
              <h4
                className="center"
              >
                Welcome Back
              </h4>
              <hr />
              <form
                className="col l6 m8 s12 offset-l3 offset-m2"
                onSubmit={[Function]}
              >
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <i
                      aria-hidden="true"
                      className="fa fa-envelope prefix"
                    />
                    <input
                      id="email"
                      name="email"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <label
                      className="active"
                      htmlFor="email"
                    >
                      Email
                    </label>
                  </div>
                  <span
                    className="red-text right error-font"
                  />
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <i
                      aria-hidden="true"
                      className="fa fa-key prefix"
                    />
                    <input
                      autoComplete="off"
                      id="password"
                      name="password"
                      onChange={[Function]}
                      type="password"
                      value=""
                    />
                    <label
                      className="active"
                      htmlFor="password"
                    >
                      Password
                    </label>
                  </div>
                  <span
                    className="red-text right error-font"
                  />
                </div>
                <div
                  className="row"
                >
                  <button
                    className="btn right green form-margin"
                    name="action"
                    type="submit"
                  >
                    Login
                  </button>
                </div>
              </form>
            </div>
          </div>
          <Footer />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="body"
        >
          <withRouter(Menu) />
          <div
            className="main"
          >
            <div
              className="login-form z-depth-4"
            >
              <h4
                className="center"
              >
                Welcome Back
              </h4>
              <hr />
              <form
                className="col l6 m8 s12 offset-l3 offset-m2"
                onSubmit={[Function]}
              >
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <i
                      aria-hidden="true"
                      className="fa fa-envelope prefix"
                    />
                    <input
                      id="email"
                      name="email"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <label
                      className="active"
                      htmlFor="email"
                    >
                      Email
                    </label>
                  </div>
                  <span
                    className="red-text right error-font"
                  />
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <i
                      aria-hidden="true"
                      className="fa fa-key prefix"
                    />
                    <input
                      autoComplete="off"
                      id="password"
                      name="password"
                      onChange={[Function]}
                      type="password"
                      value=""
                    />
                    <label
                      className="active"
                      htmlFor="password"
                    >
                      Password
                    </label>
                  </div>
                  <span
                    className="red-text right error-font"
                  />
                </div>
                <div
                  className="row"
                >
                  <button
                    className="btn right green form-margin"
                    name="action"
                    type="submit"
                  >
                    Login
                  </button>
                </div>
              </form>
            </div>
          </div>
          <Footer />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SignIn
    history={
      Object {
        "push": [MockFunction],
      }
    }
    login={[MockFunction]}
    userData={
      Object {
        "currentUser": Object {
          "email": "chibuezeayogu@hotmail.com",
          "id": 1,
        },
        "isAuthenticated": false,
      }
    }
  />,
}
`;
