// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditRecipe /> should render without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  "node": <div
    className="body grey lighten-5"
  >
    <withRouter(Connect(UserMenu)) />
    <div
      className="main"
    >
      <div
        className="container"
      >
        <div
          className="edit-recipe-form"
        >
          <div
            className="col l6 m8 s12 offset-l6 offset-m4"
          >
            <h4
              className="center"
            >
              Edit Recipe
            </h4>
            <hr />
          </div>
          <form
            onSubmit={[Function]}
          >
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <label
                  className="active"
                  htmlFor="title"
                >
                  Title
                </label>
              </div>
              <span
                className="right red-text error-margin"
              />
            </div>
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <input
                  id="description"
                  name="description"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <label
                  className="active"
                  htmlFor="description"
                >
                  Description
                </label>
              </div>
              <span
                className="right red-text error-margin"
              />
            </div>
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <textarea
                  id="ingredients"
                  name="ingredients"
                  onChange={[Function]}
                  placeholder="enter ingredients seperated by semicolon(;)"
                  value=""
                />
              </div>
              <span
                className="right red-text error-margin"
              />
            </div>
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <textarea
                  id="procedures"
                  name="procedures"
                  onChange={[Function]}
                  placeholder="enter procedures seperated by semicolon(;)"
                  value=""
                />
              </div>
              <span
                className="right red-text error-margin"
              />
            </div>
            <div
              className="row"
            >
              <div
                className="file-field input-field"
                style={
                  Object {
                    "marginLeft": 10,
                    "marginRight": 10,
                  }
                }
              >
                <div
                  className="btn green"
                >
                  <span>
                    <i
                      className="material-icons"
                    >
                      insert_photo
                    </i>
                  </span>
                  <input
                    id="image"
                    multiple={true}
                    onChange={[Function]}
                    type="file"
                  />
                </div>
                <div
                  className="file-path-wrapper"
                >
                  <input
                    className="file-path validate"
                    placeholder="Upload recipe image"
                    type="text"
                  />
                </div>
                <span
                  className="right red-text error-margin"
                />
              </div>
            </div>
            <div
              className="row"
            >
              <button
                className="btn right green"
                disabled={false}
                name="action"
                style={
                  Object {
                    "marginRight": 10,
                  }
                }
                type="submit"
              >
                Update
              </button>
            </div>
            <hr />
            <div
              className="row center"
            >
              <div>
                
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
    <Footer />
  </div>,
  "nodes": Array [
    <div
      className="body grey lighten-5"
    >
      <withRouter(Connect(UserMenu)) />
      <div
        className="main"
      >
        <div
          className="container"
        >
          <div
            className="edit-recipe-form"
          >
            <div
              className="col l6 m8 s12 offset-l6 offset-m4"
            >
              <h4
                className="center"
              >
                Edit Recipe
              </h4>
              <hr />
            </div>
            <form
              onSubmit={[Function]}
            >
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <input
                    id="title"
                    name="title"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="active"
                    htmlFor="title"
                  >
                    Title
                  </label>
                </div>
                <span
                  className="right red-text error-margin"
                />
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <input
                    id="description"
                    name="description"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="active"
                    htmlFor="description"
                  >
                    Description
                  </label>
                </div>
                <span
                  className="right red-text error-margin"
                />
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <textarea
                    id="ingredients"
                    name="ingredients"
                    onChange={[Function]}
                    placeholder="enter ingredients seperated by semicolon(;)"
                    value=""
                  />
                </div>
                <span
                  className="right red-text error-margin"
                />
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <textarea
                    id="procedures"
                    name="procedures"
                    onChange={[Function]}
                    placeholder="enter procedures seperated by semicolon(;)"
                    value=""
                  />
                </div>
                <span
                  className="right red-text error-margin"
                />
              </div>
              <div
                className="row"
              >
                <div
                  className="file-field input-field"
                  style={
                    Object {
                      "marginLeft": 10,
                      "marginRight": 10,
                    }
                  }
                >
                  <div
                    className="btn green"
                  >
                    <span>
                      <i
                        className="material-icons"
                      >
                        insert_photo
                      </i>
                    </span>
                    <input
                      id="image"
                      multiple={true}
                      onChange={[Function]}
                      type="file"
                    />
                  </div>
                  <div
                    className="file-path-wrapper"
                  >
                    <input
                      className="file-path validate"
                      placeholder="Upload recipe image"
                      type="text"
                    />
                  </div>
                  <span
                    className="right red-text error-margin"
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <button
                  className="btn right green"
                  disabled={false}
                  name="action"
                  style={
                    Object {
                      "marginRight": 10,
                    }
                  }
                  type="submit"
                >
                  Update
                </button>
              </div>
              <hr />
              <div
                className="row center"
              >
                <div>
                  
                </div>
              </div>
            </form>
          </div>
        </div>
      </div>
      <Footer />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <EditRecipe
        editRecipe={[MockFunction]}
        fetchRecipe={
          [MockFunction] {
            "calls": Array [
              Array [
                1,
              ],
            ],
          }
        }
        history={
          Object {
            "goBack": [MockFunction],
            "push": [MockFunction],
          }
        }
        match={
          Object {
            "params": Object {
              "id": 1,
            },
          }
        }
        userRecipeReducer={
          Object {
            "isFetched": false,
            "isUpdated": false,
            "recipes": Array [],
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": EditRecipe {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleChange": [Function],
        "handleOnsubmit": [Function],
        "props": Object {
          "editRecipe": [MockFunction],
          "fetchRecipe": [MockFunction] {
            "calls": Array [
              Array [
                1,
              ],
            ],
          },
          "history": Object {
            "goBack": [MockFunction],
            "push": [MockFunction],
          },
          "match": Object {
            "params": Object {
              "id": 1,
            },
          },
          "userRecipeReducer": Object {
            "isFetched": false,
            "isUpdated": false,
            "recipes": Array [],
          },
        },
        "refs": Object {},
        "state": Object {
          "description": "",
          "disabled": false,
          "errors": Object {},
          "id": "",
          "image": Object {},
          "imageUrl": "",
          "ingredients": "",
          "procedures": "",
          "title": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="body grey lighten-5"
        >
          <withRouter(Connect(UserMenu)) />
          <div
            className="main"
          >
            <div
              className="container"
            >
              <div
                className="edit-recipe-form"
              >
                <div
                  className="col l6 m8 s12 offset-l6 offset-m4"
                >
                  <h4
                    className="center"
                  >
                    Edit Recipe
                  </h4>
                  <hr />
                </div>
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <input
                        id="title"
                        name="title"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                      <label
                        className="active"
                        htmlFor="title"
                      >
                        Title
                      </label>
                    </div>
                    <span
                      className="right red-text error-margin"
                    />
                  </div>
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <input
                        id="description"
                        name="description"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                      <label
                        className="active"
                        htmlFor="description"
                      >
                        Description
                      </label>
                    </div>
                    <span
                      className="right red-text error-margin"
                    />
                  </div>
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <textarea
                        id="ingredients"
                        name="ingredients"
                        onChange={[Function]}
                        placeholder="enter ingredients seperated by semicolon(;)"
                        value=""
                      />
                    </div>
                    <span
                      className="right red-text error-margin"
                    />
                  </div>
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <textarea
                        id="procedures"
                        name="procedures"
                        onChange={[Function]}
                        placeholder="enter procedures seperated by semicolon(;)"
                        value=""
                      />
                    </div>
                    <span
                      className="right red-text error-margin"
                    />
                  </div>
                  <div
                    className="row"
                  >
                    <div
                      className="file-field input-field"
                      style={
                        Object {
                          "marginLeft": 10,
                          "marginRight": 10,
                        }
                      }
                    >
                      <div
                        className="btn green"
                      >
                        <span>
                          <i
                            className="material-icons"
                          >
                            insert_photo
                          </i>
                        </span>
                        <input
                          id="image"
                          multiple={true}
                          onChange={[Function]}
                          type="file"
                        />
                      </div>
                      <div
                        className="file-path-wrapper"
                      >
                        <input
                          className="file-path validate"
                          placeholder="Upload recipe image"
                          type="text"
                        />
                      </div>
                      <span
                        className="right red-text error-margin"
                      />
                    </div>
                  </div>
                  <div
                    className="row"
                  >
                    <button
                      className="btn right green"
                      disabled={false}
                      name="action"
                      style={
                        Object {
                          "marginRight": 10,
                        }
                      }
                      type="submit"
                    >
                      Update
                    </button>
                  </div>
                  <hr />
                  <div
                    className="row center"
                  >
                    <div>
                      
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
          <Footer />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="body grey lighten-5"
        >
          <withRouter(Connect(UserMenu)) />
          <div
            className="main"
          >
            <div
              className="container"
            >
              <div
                className="edit-recipe-form"
              >
                <div
                  className="col l6 m8 s12 offset-l6 offset-m4"
                >
                  <h4
                    className="center"
                  >
                    Edit Recipe
                  </h4>
                  <hr />
                </div>
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <input
                        id="title"
                        name="title"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                      <label
                        className="active"
                        htmlFor="title"
                      >
                        Title
                      </label>
                    </div>
                    <span
                      className="right red-text error-margin"
                    />
                  </div>
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <input
                        id="description"
                        name="description"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                      <label
                        className="active"
                        htmlFor="description"
                      >
                        Description
                      </label>
                    </div>
                    <span
                      className="right red-text error-margin"
                    />
                  </div>
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <textarea
                        id="ingredients"
                        name="ingredients"
                        onChange={[Function]}
                        placeholder="enter ingredients seperated by semicolon(;)"
                        value=""
                      />
                    </div>
                    <span
                      className="right red-text error-margin"
                    />
                  </div>
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <textarea
                        id="procedures"
                        name="procedures"
                        onChange={[Function]}
                        placeholder="enter procedures seperated by semicolon(;)"
                        value=""
                      />
                    </div>
                    <span
                      className="right red-text error-margin"
                    />
                  </div>
                  <div
                    className="row"
                  >
                    <div
                      className="file-field input-field"
                      style={
                        Object {
                          "marginLeft": 10,
                          "marginRight": 10,
                        }
                      }
                    >
                      <div
                        className="btn green"
                      >
                        <span>
                          <i
                            className="material-icons"
                          >
                            insert_photo
                          </i>
                        </span>
                        <input
                          id="image"
                          multiple={true}
                          onChange={[Function]}
                          type="file"
                        />
                      </div>
                      <div
                        className="file-path-wrapper"
                      >
                        <input
                          className="file-path validate"
                          placeholder="Upload recipe image"
                          type="text"
                        />
                      </div>
                      <span
                        className="right red-text error-margin"
                      />
                    </div>
                  </div>
                  <div
                    className="row"
                  >
                    <button
                      className="btn right green"
                      disabled={false}
                      name="action"
                      style={
                        Object {
                          "marginRight": 10,
                        }
                      }
                      type="submit"
                    >
                      Update
                    </button>
                  </div>
                  <hr />
                  <div
                    className="row center"
                  >
                    <div>
                      
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
          <Footer />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <EditRecipe
    editRecipe={[MockFunction]}
    fetchRecipe={
      [MockFunction] {
        "calls": Array [
          Array [
            1,
          ],
        ],
      }
    }
    history={
      Object {
        "goBack": [MockFunction],
        "push": [MockFunction],
      }
    }
    match={
      Object {
        "params": Object {
          "id": 1,
        },
      }
    }
    userRecipeReducer={
      Object {
        "isFetched": false,
        "isUpdated": false,
        "recipes": Array [],
      }
    }
  />,
}
`;
